param$time_to_7_log <- vector(mode = "logical", length = nrow(param))
param$time_to_7_log <- as.numeric(param$time_to_7_log )
day <- c(1:30)
conc <- vector(mode = "logical", length = length(day))
pred <- bind_cols(day, conc)
colnames(pred) <- c("day", "conc")
for(i in 1:nrow(param)){
if(param$model[i] == "baranyi_no_lag"){
my_model <- list(
model ="Baranyi",
logN0 = param$n0[i],
logNmax = param$nmax[i],
mu = param$mumax[i]/2.303,
lambda = 0
)
my_pred <- predict_growth(day,
my_model)
} else {
my_model = list(
model ="Trilinear",
logN0 = param$n0[i],
logNmax = param$nmax[i],
mu = param$mumax[i]/2.303,
lambda = 0)
my_pred <- predict_growth(day,
my_model)
}
time_to_7 <- time_to_size(my_pred, 7)
param$time_to_7_log[i] <- time_to_7
}
#Time to 7 log
param %>%
group_by(loc, test) %>%
filter(!is.na(time_to_7_log)) %>%
summarize(median = quantile(time_to_7_log, type = 7)[3],
lb = quantile(time_to_7_log, type = 7)[2],
ub = quantile(time_to_7_log, type = 7)[4])
param_apc_time <- param %>%
filter(test == "apc") %>%
filter(loc %in% c("AZ", "CA"))
param_pc_time <- param %>%
filter(test == "pc") %>%
filter(loc %in% c("AZ", "CA"))
hist(param_apc_time$time_to_7_log)
time_apc <- wilcox.test(param_apc_time$time_to_7_log[param_apc_time$loc == "AZ"],
param_apc_time$time_to_7_log[param_apc_time$loc == "CA"])
time_pc <- wilcox.test(param_pc_time$time_to_7_log[param_pc_time$loc == "AZ"],
param_pc_time$time_to_7_log[param_pc_time$loc == "CA"])
p_val_time_to_7_log <- c(time_apc[[3]],
time_pc[[3]])
p.adjust(p_val_time_to_7_log, method = "holm", n = 2)
param$time_to_7_log_st <- vector(mode = "logical", length = nrow(param))
param$time_to_7_log_st <- as.numeric(param$time_to_7_log )
day <- c(1:30)
conc <- vector(mode = "logical", length = length(day))
pred <- bind_cols(day, conc)
colnames(pred) <- c("day", "conc")
for(i in 1:nrow(param)){
if(param$model[i] == "baranyi_no_lag"){
my_model <- list(
model ="Baranyi",
logN0 = 5,
logNmax = param$nmax[i],
mu = param$mumax[i]/2.303,
lambda = 0
)
my_pred <- predict_growth(day,
my_model)
} else {
my_model = list(
model ="Trilinear",
logN0 = 5,
logNmax = param$nmax[i],
mu = param$mumax[i]/2.303,
lambda = 0)
my_pred <- predict_growth(day,
my_model)
}
time_to_7 <- time_to_size(my_pred, 7)
param$time_to_7_log_st[i] <- time_to_7
}
#Time to 7 log
param %>%
group_by(loc, test) %>%
filter(!is.na(time_to_7_log_st)) %>%
summarize(median = quantile(time_to_7_log_st, type = 7)[3],
lb = quantile(time_to_7_log_st, type = 7)[2],
ub = quantile(time_to_7_log_st, type = 7)[4])
param_apc_time <- param %>%
filter(test == "apc") %>%
filter(loc %in% c("AZ", "CA"))
param_pc_time <- param %>%
filter(test == "pc") %>%
filter(loc %in% c("AZ", "CA"))
hist(param_apc_time$time_to_7_log_st)
time_st_apc <- wilcox.test(param_apc_time$time_to_7_log_st[param_apc_time$loc == "AZ"],
param_apc_time$time_to_7_log_st[param_apc_time$loc == "CA"])
time_st_pc <- wilcox.test(param_pc_time$time_to_7_log_st[param_pc_time$loc == "AZ"],
param_pc_time$time_to_7_log_st[param_pc_time$loc == "CA"])
p_val_time_to_7_log_st <- c(time_st_apc[[3]],
time_st_pc[[3]])
p.adjust(p_val_time_to_7_log_st, method = "holm", n = 2)
apc_n0_nmax_cor <- cor.test(param$n0[param$test == "apc"],
param$nmax[param$test == "apc"],
method = "spearman")
pc_n0_nmax_cor <- cor.test(param$n0[param$test == "pc"],
param$nmax[param$test == "pc"],
method = "spearman")
p_val_time_n0_nmax <- c(apc_n0_nmax_cor[[3]],
pc_n0_nmax_cor[[3]])
p.adjust(p_val_time_n0_nmax, method = "holm", n = 2)
param_weat <- param %>%
dplyr::select(sampling_code, nmax, test, loc)
cluster <- vector(mode = "numeric", length = 26)
var_name <- vector(mode = "character", length = 26)
aic <- vector(mode = "character", length = 26)
finish_weather <- bind_cols(cluster, var_name, aic, aic)
colnames(finish_weather) <- c("cluster", "var_name", "aic_apc", "aic_pc")
finish_weather$cluster <- c(rep(1, times = 6),
2:4,
rep(5, times = 8),
rep(6, times = 9))
finish_weather$var_name <- c("windspeed_mean_1d",  "windspeed_mean_2d",
"srad_mean_1d", "srad_mean_2d",
"srad_mean_3d", "srad_mean_4d_7d",
"precip_sum_1d_3d", "windspeed_mean_4d_7d",
"windspeed_mean_3d", "temp_mean_1d",
"temp_min_1d", "temp_max_1d",
"dew_mean_1d", "dew_mean_2d",
"dew_mean_3d", "dew_mean_4d_7d",
"precip_sum_4d_7d", "temp_mean_2d",
"temp_mean_3d", "temp_mean_4d_7d",
"temp_min_2d", "temp_min_3d",
"temp_min_4d_7d", "temp_max_2d",
"temp_max_3d", "temp_max_4d_7d")
finished_met <- weather_met %>%
filter(sample_type != "r")
param_weather <- merge(param_weat,
finished_met,
by.x = "sampling_code",
by.y = "sampling_code")
param_weather_apc <- filter(param_weather, test == "apc")
param_weather_pc <- filter(param_weather, test == "pc")
for(i in 1:nrow(finish_weather)){
form <-  formula(paste("nmax ~ loc + ", finish_weather$var_name[i]))
f_lin_mod_weath_apc <- lm(form,
data = filter(param_weather_apc, test == "apc"))
f_lin_mod_weath_pc <-lm(form,
data = filter(param_weather_pc, test == "pc"))
finish_weather$aic_apc[i] <- AIC(f_lin_mod_weath_apc)
finish_weather$aic_pc[i] <- AIC(f_lin_mod_weath_pc)
}
for(i in 1:nrow(finish_weather)){
form <-  formula(paste("nmax ~ loc + ", finish_weather$var_name[i]))
f_lin_mod_weath_apc <- lm(form,
data = filter(param_weather_apc, test == "apc"))
f_lin_mod_weath_pc <-lm(form,
data = filter(param_weather_pc, test == "pc"))
finish_weather$aic_apc[i] <- AIC(f_lin_mod_weath_apc)
finish_weather$aic_pc[i] <- AIC(f_lin_mod_weath_pc)
}
finish_weather$aic_apc <- as.numeric(finish_weather$aic_apc)
finish_weather$aic_pc <- as.numeric(finish_weather$aic_pc)
#APC, weather variable selection:
#APC cluster 1: srad_mean_3d, windspeed_mean_1d
cor(param_weather_apc$srad_mean_3d,
param_weather_apc$windspeed_mean_1d,
method = "spearman")
#APC cluster 5: dew_mean_2d, temp_mean_1d
cor(param_weather_apc$dew_mean_2d,
param_weather_apc$dew_mean_3d,
method = "spearman")
cor(param_weather_apc$dew_mean_2d,
param_weather_apc$temp_min_1d,
method = "spearman")
cor(param_weather_apc$dew_mean_2d,
param_weather_apc$temp_mean_1d,
method = "spearman")
#APC cluster 6: temp_min_4d_7d, temp_max_3d
cor(param_weather_apc$temp_min_4d_7d,
param_weather_apc$temp_min_2d,
method = "spearman")
cor(param_weather_apc$temp_min_4d_7d,
param_weather_apc$temp_mean_4d_7d,
method = "spearman")
cor(param_weather_apc$temp_min_4d_7d,
param_weather_apc$temp_mean_3d,
method = "spearman")
cor(param_weather_apc$temp_min_4d_7d,
param_weather_apc$temp_mean_2d,
method = "spearman")
cor(param_weather_apc$temp_min_4d_7d,
param_weather_apc$temp_max_3d,
method = "spearman")
apc_weather_var <- finish_weather %>%
filter(var_name %in% c("srad_mean_3d", "windspeed_mean_1d", "dew_mean_2d",
"temp_mean_1d", "temp_min_4d_7d", "temp_max_3d",
"precip_sum_1d_3d", "windspeed_mean_4d_7d",
"windspeed_mean_3d"))
cor_apc_dat <- param_weather_apc %>%
select(srad_mean_3d, windspeed_mean_1d, dew_mean_2d,
temp_mean_1d, temp_min_4d_7d,
precip_sum_1d_3d, temp_max_3d,
windspeed_mean_4d_7d, windspeed_mean_3d)
cor_apc <- cor(cor_apc_dat, method = "spearman")
View(cor_apc)
View(param_weather_apc)
View(param_weather_apc)
View(finish_weather)
#APC cluster 5: temp_mean_1d,dew_mean_4d_7d
cor(param_weather_apc$temp_mean_1d,
param_weather_apc$temp_min_1d,
method = "spearman")
cor(param_weather_apc$dew_mean_1d,
param_weather_apc$temp_mean_1d,
method = "spearman")
cor(param_weather_apc$temp_mean_1d,
param_weather_apc$temp_max_1d,
method = "spearman")
cor(param_weather_apc$temp_mean_1d,
param_weather_apc$dew_mean_4d_7d,
method = "spearman")
apc_weather_var <- finish_weather %>%
filter(var_name %in% c("srad_mean_3d", "windspeed_mean_1d", "temp_mean_1d",
"dew_mean_4d_7d", "temp_min_4d_7d", "temp_max_3d",
"precip_sum_1d_3d", "windspeed_mean_4d_7d",
"windspeed_mean_3d"))
cor_apc_dat <- param_weather_apc %>%
select(srad_mean_3d, windspeed_mean_1d, temp_mean_1d,
dew_mean_4d_7d, temp_min_4d_7d, temp_max_3d,
precip_sum_1d_3d, windspeed_mean_4d_7d,
windspeed_mean_3d)
cor_apc <- cor(cor_apc_dat, method = "spearman")
View(cor_apc)
apc_weather_var <- finish_weather %>%
filter(var_name %in% c("srad_mean_3d", "windspeed_mean_1d", "temp_mean_1d",
"dew_mean_4d_7d", "temp_min_4d_7d", "temp_max_3d",
"precip_sum_1d_3d", "windspeed_mean_4d_7d",
"windspeed_mean_3d"))
cor_apc_dat <- param_weather_apc %>%
select(srad_mean_3d, windspeed_mean_1d, temp_mean_1d,
dew_mean_4d_7d, temp_min_4d_7d, temp_max_3d,
precip_sum_1d_3d, windspeed_mean_4d_7d,
windspeed_mean_3d)
cor_apc <- cor(cor_apc_dat, method = "spearman")
View(apc_weather_var)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
#PC, weather variable selection:
#PC cluster 1: srad_mean_3d, windspeed_mean_1d
cor(param_weather_pc$srad_mean_3d,
param_weather_pc$windspeed_mean_1d,
method = "spearman")
#PC cluster 5: temp_min_1d, temp_max_1d
cor(param_weather_pc$temp_min_1d,
param_weather_pc$dew_mean_2d,
method = "spearman")
cor(param_weather_pc$temp_min_1d,
param_weather_pc$temp_mean_1d,
method = "spearman")
cor(param_weather_pc$temp_min_1d,
param_weather_pc$dew_mean_3d,
method = "spearman")
cor(param_weather_pc$temp_min_1d,
param_weather_pc$temp_max_1d,
method = "spearman")
#PC cluster 6: temp_min_4d_7d, temp_max_3d
cor(param_weather_pc$temp_min_4d_7d,
param_weather_pc$temp_min_2d,
method = "spearman")
cor(param_weather_pc$temp_min_4d_7d,
param_weather_pc$temp_max_3d,
method = "spearman")
pc_weather_var <- finish_weather %>%
filter(var_name %in% c("srad_mean_3d", "windspeed_mean_1d", "temp_min_1d",
"temp_max_1d", "temp_min_4d_7d", "temp_max_3d",
"precip_sum_1d_3d", "windspeed_mean_4d_7d",
"windspeed_mean_3d"))
cor_pc_dat <- param_weather_pc %>%
select(srad_mean_3d, windspeed_mean_1d, temp_min_1d,
temp_max_1d, temp_min_4d_7d, temp_max_3d,
precip_sum_1d_3d, windspeed_mean_4d_7d,
windspeed_mean_3d)
cor_pc <- cor(cor_pc_dat, method = "spearman")
View(cor_pc)
#PC cluster 5: dew_mean_3d, temp_max_1d
cor(param_weather_pc$dew_mean_2d, #dew_mean_2d is correlated with variables from other clusters
param_weather_pc$temp_max_1d,
method = "spearman")
cor(param_weather_pc$dew_mean_3d,
param_weather_pc$temp_max_1d,
method = "spearman")
pc_weather_var <- finish_weather %>%
filter(var_name %in% c("srad_mean_3d", "windspeed_mean_1d", "dew_mean_3d",
"temp_max_1d", "temp_min_4d_7d", "temp_max_3d",
"precip_sum_1d_3d", "windspeed_mean_4d_7d",
"windspeed_mean_3d"))
cor_pc_dat <- param_weather_pc %>%
select(srad_mean_3d, windspeed_mean_1d, dew_mean_3d,
temp_max_1d, temp_min_4d_7d, temp_max_3d,
precip_sum_1d_3d, windspeed_mean_4d_7d,
windspeed_mean_3d)
cor_pc <- cor(cor_pc_dat, method = "spearman")
View(pc_weather_var)
View(apc_weather_var)
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d, data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
summary(nmax_mod_1_pc)
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +precip_sum_1d_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +srad_mean_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +srad_mean_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +srad_mean_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +temp_max_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +windspeed_mean_1d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +dew_mean_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +windspeed_mean_4d_7d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +temp_max_1d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d +windspeed_mean_3d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
nmax_mod_1_pc <- lm(nmax ~ loc + temp_min_4d_7d , data = param_weather_pc)
step(nmax_mod_1_pc, test = "F")
summary(nmax_mod_1_pc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + precip_sum_1d_3d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + srad_mean_3d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + temp_max_3d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + windspeed_mean_1d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + temp_mean_1d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + windspeed_mean_4d_7d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + windspeed_mean_4d_7d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + windspeed_mean_3d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + dew_mean_4d_7d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
summary(nmax_mod_1_apc)
step(nmax_mod_1_apc)
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + precip_sum_1d_3d, data = param_weather_apc)
step(nmax_mod_1_apc)
summary(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + srad_mean_3d, data = param_weather_apc)
step(nmax_mod_1_apc)
summary(nmax_mod_1_apc)
srad_mean_3d
srad_mean_3d
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + srad_mean_3d, data = param_weather_apc)
step(nmax_mod_1_apc)
nmax_mod_1_apc <- lm(nmax ~ loc + temp_min_4d_7d + precip_sum_1d_3d, data = param_weather_apc)
step(nmax_mod_1_apc, test = "F")
## ----------------------Packages-----------------------------------------------
#   Loading packages
library(tidyverse); library(dplyr); library(lme4); library(ggplot2); library(lmerTest);
library(WRS2); library(emmeans)
## ----------------------Reading in Data----------------------------------------
shelf_life_geom <- read.csv("data/wrangled/shelf_life_conc_by_testing_day.csv", header = TRUE)
harvest_geom <- read.csv("data/wrangled/harvest_conc_by_testing_day.csv", header = TRUE)
weather_met <- read.csv("data/wrangled/weather_metrics.csv", header = TRUE)
metadata <- read.csv("data/wrangled/wrangled_metadata.csv", header = TRUE)
## ----------------------Harvest overall----------------------------------------
#Filtering out data from 1221_A, since they were from Florida;
#1222_A was removed, because it only had data from PC
#Filtering out 0722_B, since it was delayed in shipment to Ithaca
harvest_geom_lin <- harvest_geom %>%
filter(!(sampling_code %in% c("1221_A", "1222_A", "0722_B")))
harvest_geom_lin$loc <- as.factor(harvest_geom_lin$loc)
harvest_geom_lin$sampling_code <- as.factor(harvest_geom_lin$sampling_code)
harvest_geom_lin$log_conc_geom <- as.numeric(harvest_geom_lin$log_conc_geom)
harvest_geom_lin$test <- as.factor(harvest_geom_lin$test)
#Linear model
h_lin_mod_1 <- lmer(log_conc_geom ~ loc*test  + hr_harvest_testing +
days_since_last_irrigation + (1|sampling_code), data = filter(harvest_geom_lin))
step(h_lin_mod_1, test = "F")
summary(h_lin_mod_1)
## ----------------------Harvest overall----------------------------------------
#Filtering out data from 1221_A, since they were from Florida;
#1222_A was removed, because it only had data from PC
#Filtering out 0722_B, since it was delayed in shipment to Ithaca
harvest_geom_lin <- harvest_geom %>%
filter(!(sampling_code %in% c("1221_A", "1222_A", "0722_B")))
harvest_geom_lin$loc <- as.factor(harvest_geom_lin$loc)
harvest_geom_lin$sampling_code <- as.factor(harvest_geom_lin$sampling_code)
harvest_geom_lin$log_conc_geom <- as.numeric(harvest_geom_lin$log_conc_geom)
harvest_geom_lin$test <- as.factor(harvest_geom_lin$test)
#Linear model
h_lin_mod_1 <- lmer(log_conc_geom ~ loc*test  + hr_harvest_testing +
days_since_last_irrigation + (1|sampling_code), data = filter(harvest_geom_lin))
step(h_lin_mod_1, test = "F")
step(h_lin_mod_1)
summary(h_lin_mod_1)
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
step(h_lin_mod_2, step = F)
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
step(h_lin_mod_2, step = F)
step(h_lin_mod_2, test = F)
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
step(h_lin_mod_2, test = F)
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
## ----------------------Packages-----------------------------------------------
#   Loading packages
library(tidyverse); library(dplyr); library(lme4); library(ggplot2); library(lmerTest);
library(WRS2); library(emmeans)
## ----------------------Reading in Data----------------------------------------
shelf_life_geom <- read.csv("data/wrangled/shelf_life_conc_by_testing_day.csv", header = TRUE)
harvest_geom <- read.csv("data/wrangled/harvest_conc_by_testing_day.csv", header = TRUE)
weather_met <- read.csv("data/wrangled/weather_metrics.csv", header = TRUE)
metadata <- read.csv("data/wrangled/wrangled_metadata.csv", header = TRUE)
## ----------------------Harvest overall----------------------------------------
#Filtering out data from 1221_A, since they were from Florida;
#1222_A was removed, because it only had data from PC
#Filtering out 0722_B, since it was delayed in shipment to Ithaca
harvest_geom_lin <- harvest_geom %>%
filter(!(sampling_code %in% c("1221_A", "1222_A", "0722_B")))
harvest_geom_lin$loc <- as.factor(harvest_geom_lin$loc)
harvest_geom_lin$sampling_code <- as.factor(harvest_geom_lin$sampling_code)
harvest_geom_lin$log_conc_geom <- as.numeric(harvest_geom_lin$log_conc_geom)
harvest_geom_lin$test <- as.factor(harvest_geom_lin$test)
#Linear model
h_lin_mod_1 <- lmer(log_conc_geom ~ loc*test  + hr_harvest_testing +
days_since_last_irrigation + (1|sampling_code), data = filter(harvest_geom_lin))
step(h_lin_mod_1)
summary(h_lin_mod_1)
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
step(h_lin_mod_2, test = F)
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
step(h_lin_mod_2, test = F)
step(h_lin_mod_2, test = "F")
lmerTest::step(h_lin_mod_4, test = "F")
h_lin_mod_4 <-  lm(log_conc_geom ~ loc + hr_harvest_testing + temp_mean_1d,
data = filter(harvest_geom_lin_weather, test == "APC"))
lmerTest::step(h_lin_mod_2, test = "F")
#Linear model, without weather
h_lin_mod_2 <-  lm(log_conc_geom ~ loc  + hr_harvest_testing, data = filter(harvest_geom_lin, test == "APC"))
lmerTest::step(h_lin_mod_2, test = "F")
summary(h_lin_mod_2)
## ----------------------Packages-----------------------------------------------
#   Loading packages
library(tidyverse); library(dplyr); library(lme4); library(ggplot2); library(lmerTest);
library(WRS2); library(emmeans)
## ----------------------Reading in Data----------------------------------------
shelf_life_geom <- read.csv("data/wrangled/shelf_life_conc_by_testing_day.csv", header = TRUE)
harvest_geom <- read.csv("data/wrangled/harvest_conc_by_testing_day.csv", header = TRUE)
weather <- read.csv("data/wrangled/pca_weather.csv", header = TRUE)
harvest_geom_med_iqr_by_loc <- harvest_geom_filt %>%
group_by(loc, test) %>%
summarize(median = round(quantile(log_conc_geom, type = 7)[3], 2),
lb = round(quantile(log_conc_geom, type = 7)[2], 2),
ub = round(quantile(log_conc_geom, type = 7)[4], 2),
n = n())
## ----------------------Packages-----------------------------------------------
#   Loading packages
library(tidyverse); library(dplyr); library(lme4); library(ggplot2); library(lmerTest);
library(WRS2); library(emmeans)
## ----------------------Reading in Data----------------------------------------
shelf_life_geom <- read.csv("data/wrangled/shelf_life_conc_by_testing_day.csv", header = TRUE)
harvest_geom <- read.csv("data/wrangled/harvest_conc_by_testing_day.csv", header = TRUE)
metadata <- read.csv("data/wrangled/wrangled_metadata.csv", header = TRUE)
## ----------------------Harvest overall----------------------------------------
#Filtering out data from 0722_B, and 1222_A
harvest_geom_filt <- harvest_geom %>%
filter(!(sampling_code %in% c("0722_B"))) %>%
filter(!(sampling_code %in% c("1222_A") & test %in% c("APC", "GN")))
harvest_geom_med_iqr_by_test <- harvest_geom_filt %>%
group_by(test) %>%
summarize(median = round(quantile(log_conc_geom, type = 7)[3], 2),
lb = round(quantile(log_conc_geom, type = 7)[2], 2),
ub = round(quantile(log_conc_geom, type = 7)[4], 2),
n = n())
harvest_geom_med_iqr_by_loc <- harvest_geom_filt %>%
group_by(loc, test) %>%
summarize(median = round(quantile(log_conc_geom, type = 7)[3], 2),
lb = round(quantile(log_conc_geom, type = 7)[2], 2),
ub = round(quantile(log_conc_geom, type = 7)[4], 2),
n = n())
#Filtering out the 1122_B shelf life counts, since these samples were from GA
#Also removing counts from 0922_B (which did not have any metadata)
#Filtering out counts from 0422_B and 0522_A, because we had incomplete data for these lots
#Keeping 0422_A. This sample was tested every 7 days, until day 21 of shelf
shelf_life_geom_filt <- shelf_life_geom %>%
filter(!(sampling_code %in% c("0922_B")))
View(harvest_geom_med_iqr_by_test)
View(harvest_geom_med_iqr_by_loc)
